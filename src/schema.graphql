scalar Date

input CreateUserInput {
  id: Int!
  username: String!
  firstname: String
  lastName: String
  age: Float
}

input CreateMessageInput {
  text: String!
  userId: ID!
  channelId: ID!
}

type User {
  id: ID!
  username: String!
  firstname: String
  lastName: String
  age: Float
  channels: [Channel]
  messages: [Message]
}

type Message {
  id: ID!
  text: String
  owner: User
  channel: Channel
  createdAt: Date
  updateAt: Date
}

type Channel {
  id: ID!
  name: String
  createdAt: Date
  users: [User]!
  messages: [Message]
}

type Query {
  user(id: ID!): User
}

type Mutation {
  createUser(input: CreateUserInput!): User
  createMessage(input: CreateMessageInput!): Message
}

type Subscription {
  onCreateUser: User
  onCreateMessage(channelId: ID!): Message
}